# SciTE settings for LuaJIT and Terra files

file.patterns.lua=*.lua;*.dasl;*.t
*source.patterns.lua=$(file.patterns.lua);
filter.lua=Lua (lua)|$(file.patterns.lua)|
*filter.lua=$(filter.lua)
lexer.$(file.patterns.lua)=lua
shbang.lua=lua
*language.lua=Lu&a|lua||

word.chars.lua=$(chars.alpha)$(chars.numeric)$(chars.accented)_%
word.characters.$(file.patterns.lua)=$(word.chars.lua)

# editor ---------------------------------------------------------------------

tab.size.$(file.patterns.lua)=3
indent.size.$(file.patterns.lua)=3
statement.indent.$(file.patterns.lua)=5 do else function then
statement.end.$(file.patterns.lua)=5 end
# look up in the source only 5 lines to get current indentation
statement.lookback.$(file.patterns.lua)=5
# simply repeat the indentation of the previous line instead of indenting on some keywords
indent.maintain.$(file.patterns.lua)=1

# calltips
api.$(file.patterns.lua)=$(SciteDefaultHome)\lua.api
calltip.lua.end.definition=)
calltip.lua.word.characters=.:$(chars.alpha)$(chars.numeric)
calltip.lua.parameters.start=(
calltip.lua.parameters.end=)
calltip.lua.parameters.separators=,

# keywords: Lua 5.1 & 5.2
# language keywords
keywords.$(file.patterns.lua)=and break do else elseif end for function goto \
if in local not or repeat return then until while

# standard library functions
keywords2.$(file.patterns.lua)=_G _ENV getfenv getmetatable ipairs loadlib next pairs pcall \
rawequal setfenv setmetatable xpcall module select \
assert collectgarbage dofile error gcinfo loadfile loadstring load \
print rawget rawset require tonumber tostring unpack table.unpack \
string.byte string.char string.dump string.find string.len \
string.lower string.rep string.sub string.upper string.format string.gfind string.gsub \
table.concat table.foreach table.foreachi table.getn table.sort table.insert table.remove table.setn \
math.abs math.acos math.asin math.atan math.atan2 math.ceil math.cos math.deg math.exp \
math.floor math.frexp math.ldexp math.log math.log10 math.max math.min math.mod \
math.pow math.rad math.random math.randomseed math.sin math.sqrt math.tan \
string.gmatch string.match string.reverse table.maxn \
math.cosh math.fmod math.modf math.sinh math.tanh \
coroutine.create coroutine.resume coroutine.status \
coroutine.wrap coroutine.yield coroutine.running \
io.close io.flush io.input io.lines io.open io.output io.read io.tmpfile io.type io.write \
io.popen \
os.clock os.date os.difftime os.execute os.exit os.getenv os.remove os.rename os.setlocale os.time os.tmpname \
package.loadlib package.seeall package.searchpath \
debug.debug debug.getfenv debug.gethook debug.getinfo debug.getlocal \
debug.getmetatable debug.getregistry debug.getupvalue debug.setfenv \
debug.sethook debug.setlocal debug.setmetatable debug.setupvalue debug.traceback

# standard variables
keywords3.$(file.patterns.lua)=self nil true false string table math coroutine io os debug \
_VERSION math.pi math.huge io.stdin io.stdout io.stderr package.cpath package.path package.preload package.loaded \
package.loaders package.searchers

# Terra keywords
keywords4.$(file.patterns.lua)=terra quote escape emit struct var defer
# class method field before after over

# Terra standard library
keywords5.$(file.patterns.t)=macro global constant symbol sizeof newstruct offsetof \
tuple array arrayof unpacktuple unpackstruct \
iif pr pf pfn min max clamp floor ceil round abs snap lerp sqrt \
PI inf nan maxint minint sin cos tan asin acos atan rad deg \
minmax \
include includepath includecstring linklibrary overload require_h \
inherited retval \
arr map set \
bnot shl shr band bor xor \
add insert push pop sort format traceback yield resume cowrap cocreate concat \
sortedpairs extend update index indexof attr count memoize \
pack unpack lines readfile writefile binsearch autoload \
inc dec isodd iseven isnan noop pass

# keywords6, 7 & 8 are for other libraries
keywords8.$(file.patterns.lua)=BSD C Linux OSX POSIX Windows _ _G _VERSION abs add addr after append arg assert assertf attr attrs attrs_clear attrs_find autoload band before binsearch bit bit.arshift bit.band bit.bnot bit.bor bit.bswap bit.bxor bit.lshift bit.rol bit.ror bit.rshift bit.tobit bit.tohex bnot bor buffer canopen cast cat catargs ceil char check clamp clock cocreate collect collectgarbage concat coroutine coroutine.create coroutine.isyieldable coroutine.resume coroutine.running coroutine.status coroutine.wrap coroutine.yield cos count cowrap date day dbg debug debug.debug debug.getfenv debug.gethook debug.getinfo debug.getlocal debug.getmetatable debug.getregistry debug.getupvalue debug.getuservalue debug.setfenv debug.sethook debug.setlocal debug.setmetatable debug.setupvalue debug.setuservalue debug.traceback debug.upvalueid debug.upvaluejoin deg del dofile dynarray empty error errors errors.catch errors.catchall errors.check errors.error errors.errortype errors.is errors.new errors.pcall errors.protect errors.raise raise catch iserror newerror errortype lua_pcall Error errors.tcp_protocol_errors esc exit extend fcall ffi C ffi.abi ffi.alignof ffi.arch cast cdef copy errno fill gc isctype ffi.load metatype new offsetof ctype ffi.os sizeof ffi.string str ffi.typeinfo ctype floor fmt format _ fpcall freelist gcinfo getfenv getmetatable gettersandsetters env glue addr after append assert attr autoload before bin scriptname binsearch bor buffer canopen capitalize catargs ceil clamp collect count cpath day dynarray dynarray_loader dynarray_pump empty ends esc extend fcall floor fpcall freelist fromhex getbit gettersandsetters gsplit i8a i8p u16a u16p i16a i16p u32a u32p i32a i32p  u64a u64p i64a i64p  i32 u32 i64 u64  f32p f32a f64p f64a  voidp intptr uintptr index indexof inherit keys lerp lineinfo lines lpad luapath luacpath map imap memoize memoize_multiret merge module month words kbytes random_string random_string nextpow2 noop object inherits now outdent outdent override pack pad pass pcall printer protect ptr readall readfile readpipe repl replacefile reverse round rpad setbit setbits bswap  bswap16 shift sign snap sortedarray sortedkeys sortedpairs split starts strict_sign string subst sunday time timeago timeago tohex hex hexblock trim trim tuple istuple tuples u8a u8p unpack update utc_diff weaktuples writefile year i8a i8p i32a i32p index indexof inherit ins insert io io.close io.flush io.input io.lines io.open io.output io.popen io.read io.stderr io.stdin io.stdout io.tmpfile io.type io.write ipairs jit jit.arch jit.attach jit.flush jit.off jit.on jit.opt jit.os jit.prngstate jit.status jit.version jit.version_num keys lerp ln log10 PI logbase  uuid  cmp  load reload loadfile loadstring log map imap math math.abs math.acos math.asin math.atan math.atan2 math.ceil math.cos math.cosh math.deg math.exp math.floor math.fmod math.frexp math.huge math.ldexp math.log math.log10 math.max math.min math.modf math.pi math.pow math.rad math.random math.randomseed math.sin math.sinh math.sqrt math.tan math.tanh max memoize merge min module month words newproxy next nextpow2 noop note logargs object os os.clock os.date os.difftime os.execute os.exit os.getenv os.remove os.rename os.setlocale os.time os.tmpname override pack package package.config package.cpath package.exedir exedir package.exepath exepath package.loaded package.loaders package.loadlib package.path package.preload package.searchers package.searchpath package.seeall pairs pass pcall pop pp pp.format pp.pp pp.print pp.save pp.stream pp.write pr pr.KEY pr.METATABLE pr._DESCRIPTION pr._LICENSE pr._URL pr._VERSION pr.inspect isstr isnum isint isbool isempty iscdata isthread istab isfunc load save mv cp touch mkdir chdir rm exists checkexists indir dir exec mtime gen_id print ptr push rad random randomseed rawequal rawget rawlen rawset readfile readpipe rem remove rep repl replacefile require resume suspend reverse round select setfenv setmetatable slice shift shl shr sign sin sizeof sleep snap sort sortedarray sortedkeys sortedpairs sqrt strict_sign string byte num char string.dump string.ends string.esc string.find string.format string.fromhex string.gmatch string.gsub string.len string.lines string.lower string.lpad string.match string.outdent string.pad string.rep string.reverse string.rpad string.starts string.sub string.subst catany catall html_escape print_function printf say sayn die  call string.tohex string.trim string.upper subst sunday table table.concat table.foreach table.foreachi table.getn table.insert table.maxn table.move table.pack table.remove table.sort table.unpack tan time tonumber tostring trace traceback tuple tuples typeof u8a u8p u32a u32p unpack update warnif logerror weaktuples win writefile xor xpcall year yield tcp udp newthread threadenv thread currentthread transfer onthreadfinish sleep_until sleep_job runat runafter runevery malloc realloc free ptr_serialize ptr_deserialize check_errno buffer_reader string_buffer io_error check_io checkp checknp unprotect_io protect_io config with_config load_config_string load_config_file bitflags string_flags table_flags  eval eval_file try_eval try_eval_file sopath add_searchpath

# styles ---------------------------------------------------------------------

# comments
comment.block.lua=--~
comment.block.at.line.start.lua=1

# braces are only matched in operator style
braces.lua.style=10

# White space: Visible only in View Whitespace mode (or if it has a back colour)
style.lua.0=fore:$(normal)
# Block comment (Lua 5.0)
style.lua.1=fore:$(comment)
# Line comment
style.lua.2=fore:$(comment)
# Doc comment -- Not used in Lua
style.lua.3=fore:$(comment)
# Number
style.lua.4=fore:$(number)
# Keyword
style.lua.5=fore:$(keyword)
# (Double quoted) String
style.lua.6=fore:$(string)
# Character (Single quoted string)
style.lua.7=fore:$(string)
# Literal string
style.lua.8=fore:$(string)
# Preprocessor (obsolete in Lua 4.0 and up)
style.lua.9=fore:$(error)
# Operators
style.lua.10=fore:$(operator)
# Identifier (everything else...)
style.lua.11=fore:$(normal)
# End of line where string is not closed
style.lua.12=fore:$(error),eolfilled
# Other keywords
style.lua.13=fore:$(keyword2)
style.lua.14=fore:$(keyword2)
style.lua.15=fore:$(keyword)
style.lua.16=fore:$(keyword2)
style.lua.17=fore:$(keyword2)
style.lua.18=fore:$(keyword2)
style.lua.19=fore:$(keyword3)
