
# app behavior ---------------------------------------------------------------

# enable per-directory properties
properties.directory.enable=1

# allow only one scite instance
check.if.already.open=0

# quit scite when closing the last tab
quit.on.close.last=1

# enable multiple buffers
buffers=100

# the open file dialog opens in the directory of the currently opened file.
open.dialog.in.file.directory=1

# enable tabbar
tabbar.visible=1

# check changed files upon scite activate
load.on.activate=1

# save changed files upon scite deactivate
save.on.deactivate=1

# preserve undo buffer upon file reload
reload.preserves.undo=1

# hide the horizontal scrollbar
horizontal.scrollbar=0

# hide menu on full screen
full.screen.hides.menu=1

# save all files before running, not just the active one
save.all.for.build=1

# split vertical is better on wide screens
split.vertical=1
output.vertical.size=300
output.horizontal.size=800

# hide the output pane initially
output.initial.hide=1

# default syntax highlighting mode for new files
default.file.ext=.txt

# save before exiting without confirmation
are.you.sure=0

# max unconfirmed file size to open
max.file.size=1024000

# no need to confirm auto-reloading
are.you.sure.on.reload=0

# save before running without confirmation
are.you.sure.for.build=0

# save as much session state as possible
save.session=1
save.recent=1
save.position=1
session.bookmarks=1
session.folds=1
save.recent.max=100

# tabs behavior --------------------------------------------------------------


# ui settings ----------------------------------------------------------------

# hide the toolbar
toolbar.visible=0

# show full path in caption bar and buffer number
title.full.path=1
title.show.buffers=1

# keep the tab bar even with one file on it
tabbar.hide.one=0
tabbar.multiline=0
tabbar.title.maxlength=20

# buffer ordering for Ctrl+Tab by buffer number instead of LRU stack
buffers.zorder.switching=0

# create new tab next the current one
buffers.new.position=1

# less flicker but slower
buffered.draw=1
two.phase.draw=1
cache.layout=3

# edge mode 1: show edge line
# edge mode 2: show edge.colour for characters over the edge.column
edge.mode=1
edge.column=78

# editor behavior ------------------------------------------------------------

# hide whitespace markers
view.whitespace=0
view.indentation.whitespace=0

# indentation settings
tabsize=3
indent.size=3
use.tabs=1

# set indent.size and use.tabs according to the contents of the opened file!
indent.auto=1

# turn on automatic indentation
indent.automatic=1
indent.opening=0
indent.closing=0

# tab indents and backspace unindents, rather than inserting/deleting a character
tab.indents=1
backspace.unindents=1

# hide indentation markers
view.indentation.guides=0
highlight.indentation.guides=1

# line endings: same as in file or LF, strip trailing spaces, consistent
eol.mode=LF
eol.auto=1
strip.trailing.spaces=1
ensure.consistent.line.ends=1
ensure.final.line.end=1

# caret movement -------------------------------------------------------------

virtual.space=1
caret.width=2

# when on margin, keep the view in sync with the caret vertically, but not horizontally
caret.policy.ystrict=1
caret.policy.xstrict=0
# caret "pushes" on the editor's top/bottom margins to scroll the view

# unfortunately, caret.policy.lines=0 behaves as =1
caret.policy.yslop=1
caret.policy.lines=0
caret.policy.yjumps=0

# caret "pushes" on the editor's left/right margins - ~300px to scroll the view
caret.policy.xslop=1
caret.policy.width=100
caret.policy.xjumps=1
caret.policy.xeven=1
caret.policy.yeven=1

# same policies for Find and Go commands
visible.policy.strict=1
visible.policy.slop=1
visible.policy.lines=4

# enable multiple selection
selection.multiple=1
selection.hide.on.deactivate=0

# enable brace matching highlighting
braces.check=1
braces.sloppy=1

# enable code folding
fold=1
fold.compact=0
fold.symbols=0
fold.comment=1
fold.on.open=0
fold.margin.width=10

# margin widths
line.margin.visible=1
line.margin.width=4+
margin.width=16

# detect BOM header
utf8.auto.check=2

# ascii = 0, unicode = 65001
code.page=65001

# character set depending on your font (0 = default)
character.set=0

# characters allowed in identifiers
chars.alpha=ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz
chars.numeric=0123456789
chars.accented=
word.characters.*=$(chars.alpha)$(chars.numeric)$(chars.accented)_

# disable automatic autocompletion
autocompleteword.automatic=1

# don't auto-choose when the autocomplete list has only one element
autocomplete.choose.single=0
autocomplete.*.ignorecase=1
calltip.*.ignorecase=1

# find/replace settings ------------------------------------------------------

find.files=*.*

# show button for replacing in all opened files (only with replace.use.strip=0)
find.replace.advanced=1

# don't search in files or directories starting with a dot
find.in.dot=0

# search using the panel instead of the dialog box
find.use.strip=1

# find/replace using the panel instead of the dialog box
replace.use.strip=0

# don't close the find dialog box automatically
find.close.on.find=0

# return the cursor to original position when clicking "Replace All"
find.replace.return.to.start=1

find.replace.regexp.posix=1

# output pane ----------------------------------------------------------------

output.cache.layout=3
output.tabsize=8

# ascii code page for the output window
output.code.page=0

# show time on console commands completion
time.commands=1

# console scroll to bottom (1 = scroll back to begininning of command, 0 = don't scroll at all)
output.scroll=2

# select corresponding source line on error
error.select.line=1

# clear output console before executing a new command
clear.before.execute=1

# status bar -----------------------------------------------------------------

statusbar.visible=0
statusbar.number=1
statusbar.text.1=Line $(LineNumber) Col $(ColumnNumber)\
  | Select: $(SelHeight) lines $(SelLength) bytes\
  | $(OverType) | $(EOLMode) | $(status.msg)

# context menu ---------------------------------------------------------------

user.context.menu=\
||\
Select Block|lua;no;block_select|\
Smart Paste|lua;no;smart_paste|\
Sort Selection|lua;no;sort_text|\
Sort Selection (reverse)|lua;no;sort_text_reverse|

# spell-checking extension ---------------------------------------------------

spell.dictpath=$(SciteDefaultHome)
spell.dictname=en_US

# theme vars -----------------------------------------------------------------

font=font:Fixedsys,size:9
font=font:Consolas,size:13
font=font:Input,size:10

bg=#080813
normal=#CCCCCC
lighter=#FFFFFF
darker=#408080
error=#FF0000
comment=#56CC66
keyword=#FFFF00
keyword2=#FFAA00
keyword3=#FFAA00
string=#FF3333
number=#FF6666
operator=#FFFFFF

# theme var assignments ------------------------------------------------------

# default style inherited by most other styles
style.*.32=$(font),fore:$(normal),back:$(bg)

# line numbers
style.*.33=fore:$(darker),back:$(bg)

# brace highlight
style.*.34=fore:$(keyword)

# brace incomplete highlight
style.*.35=fore:$(error)

# control characters. fore and back are determined by their lexical state, not this style
style.*.36=

# indentation guides. only the fore and back are used
style.*.37=fore:$(darker)

# caret
caret.fore=$(normal)
#caret.line.back=#FFFED8
caret.line.back.alpha=63

# selection (BUG: variable substitution doesn't work on these)
selection.fore=#FFFFFF
selection.back=#FFFFFF
selection.alpha=100

# fold margin
fold.margin.colour=$(normal)
fold.margin.highlight.colour=$(normal)

# bookmark bullet
bookmark.fore=$(normal)
bookmark.back=$(darker)
error.marker.fore=$(error)
error.marker.back=$(bg)

find.mark=#0000FF
edge.colour=#333333

# Error messages
stdstyle.error=fore:#FFFF00
error.marker.back=#B20000
error.marker.fore=#FFFF00
stdstyle.command=fore:#BBBBFF

stdstyle.diff1=fore:#007F00
stdstyle.diff2=fore:#7F7F00
stdstyle.diff3=fore:#7F0000
stdstyle.diff4=fore:#7F007F
stdstyle.diff5=fore:#007F7F
stdstyle.diff6=fore:#00007F

# Debugger markers
stdcolor.active=#408040
stdcolor.error=#804040

# language files -------------------------------------------------------------

ext.lua.startup.script=$(SciteDefaultHome)\SciTEStartup.lua

import text
import props
import bash
import batch
import markdown
import cpp
import lua
import python
import html
import css

# Gather all settings with "*language." prefix from all active .properties files
menu.language=$(star *language.)

# shortcuts ------------------------------------------------------------------

user.shortcuts=\
Ctrl+F12|IDM_WRAP|\
Escape|IDM_STOPEXECUTE|\
Ctrl+`|1142|\
Shift+F2|1141|\
Ctrl+Shift+Z|IDM_REDO|

# commands -------------------------------------------------------------------

command.go.*.lua=x:\sdk\bin\windows\luajit.exe -lscite "$(FilePath)"
command.go.*.t=x:\sdk\bin\windows\luajit.exe -lscite "$(FilePath)"
command.go.*.cpp=g++ "$(FilePath)"
command.go.*.c=gcc "$(FilePath)"

command.name.1.*=Git diff
command.1.*=git diff $(FileName).$(FileExt)
